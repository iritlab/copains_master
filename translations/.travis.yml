#
# MaÃ«l Valais <mael.valais@gmail.com>
#
# This Travis-ci configuration file has been writen to automate
# the building process and make deploying the application easy.
# for the platforms Linux and Mac OS X.
#
# The travis-ci servers are going to run this script on any push
# to the repo. Basically, it
# - tells the author of a commit if his commit has broken the build,
# - deploys two .zip containing the linux and osx apps, with the
#   touist compiled in it
#
# To allow Travis-ci to know that something has been pushed to the repo
# the owner of the project (Olivier Lezaud back then) had had to link
# the repo to the Travis-ci website.
#
# vim:set et sw=2 ts=2:

language: java

# Install packages using apt-get on linux environment
addons:
  apt:
    sources:
      - avsm
    packages:
      - libgmp-dev
      - aspcud

cache:
  apt: true
  directories:
    - $HOME/.opam
    - $HOME/.gradle
    - $HOME/Library/Caches/Homebrew

jobs:
  include:
    - os: osx
      env:
        - ARCH=mac-x86_64
    - os: linux
      env: ARCH=linux-x86_64

before_install:
  # Install packages using brew on osx environment
  - javac -version
  - if [ $TRAVIS_OS_NAME = osx ]; then mkdir ~/usr_local && sudo mv /usr/local/* ~/usr_local; fi
  - if [ $TRAVIS_OS_NAME = osx ]; then /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)" >/dev/null; fi
  # libyaml and libgmp are needed for Ruby and are missing as I reinstalled brew
  - if [ $TRAVIS_OS_NAME = osx ]; then brew install libyaml gmp opam; fi
  # Ubuntu's apt has an old opam 1.2.2. I need opam2. I had to use
  # --disable-sandboxing as Travis's ubuntu is old and doesn't have bubblewrap.
  - if [ $TRAVIS_OS_NAME = linux ]; then sudo curl -L https://github.com/ocaml/opam/releases/download/2.0.2/opam-2.0.2-x86_64-linux -o /usr/local/bin/opam && sudo chmod +x /usr/local/bin/opam; fi
  - opam init -y --auto-setup --reinit --disable-sandboxing --comp ocaml-base-compiler.4.07.1
  - opam switch create -y ocaml-base-compiler.4.07.1 || opam switch set -y ocaml-base-compiler.4.07.1
  - eval $(opam config env)
  - opam update
  - opam install -y ocamlfind menhir minisat yices2 ounit jbuilder re odoc cmdliner
  # qbf: waiting for a new release to opam with opam 2 support. In the meantime,
  # use the master branch.
  - opam pin add -y qbf https://github.com/c-cube/ocaml-qbf.git

install:
  - jbuilder build
  - jbuilder install
  # Build the Java GUI touist.jar (in support/gui)
  - cd $TRAVIS_BUILD_DIR/support/gui
  - cp $(which touist) external/touist
  - chmod ugo+x external/touist
  - if [ $TRAVIS_OS_NAME = linux ]; then TERM=dumb ./gradlew createJarZip; fi
  - if [ $TRAVIS_OS_NAME = osx ]; then   TERM=dumb ./gradlew createMacAppZip createJarZip; fi
  # Add $ARCH to the end of the .zip filename
  - |
    for f in $(find build/distributions -name "TouIST*"); do
      mv $f ${f/\.zip/-${ARCH}.zip}
    done
  - ls build/distributions
  - cd $TRAVIS_BUILD_DIR
  - |
    git status
    if ! git status 2> /dev/null | tail -n1 | grep "nothing.*clean"; then
      echo 'STOP!!! The build ends in a dirty state; see the diff:'
      git diff
      exit 1
    fi
  - jbuilder build @doc
  # Now that we are done with TouIST-v1.2.3-linux-x86_64, lets create the
  # _build/touist-cli-v1.2.3-linux-x86_64.tar.gz
  - cd _build/default/src/
  - mv ./*.exe touist-cli-"$(git describe --tags)"-${ARCH}
  - cd $TRAVIS_BUILD_DIR
  - mv _build/default/src/touist-cli* _build/

# This part is meant for unit tests (among others).
script: jbuilder runtest
after_script: jbuilder uninstall

before_deploy:
  - cd $TRAVIS_BUILD_DIR
  - git clone https://${TOK}@github.com/touist/touist.github.io.git
  - mkdir -p touist.github.io/api/v/$(git describe --tags)
  - cp -LR _build/default/_doc/* touist.github.io/api
  - cp -LR _build/default/_doc/* touist.github.io/api/v/$(git describe --tags)
  - cd touist.github.io
  - git config user.name "Travis-ci"
  - git config user.email "robot@travis-ci.org"
  - git add api/*
  - git commit -m "Generated API documentation for $(cd .. && git describe --tags)" || true
  - git push
  - cd $TRAVIS_BUILD_DIR

before_cache:
  - brew cleanup -s # scrub cache: only keeps cache for installed formalae
  - jbuilder uninstall touist
# This is the part where the touist.zip is pushed to the Github
# Releases. It will only do so when we create new tags, like v1.1.2.
deploy:
  skip_cleanup: true
  provider: releases
  api_key:
    # This is maelvalais's ciphered credentials.
    # It has been ciphered by travis's encryption system.
    secure: PNvSXUUBTgQjfio2QL9qQYtV8JCpT6nWkvRNDGFoAwdskusi719jRLjGYDKHrTHelxiehepKSxiFcPcOCfFD/WkfOLZvEBs463Xb3fldoNxUgRAWwYy/uEWwlD3lbSBREgtqrfuHP3uVKF7tYDlJXhTFpdM/nuwXGIwU5AuUhCw=
  file_glob: true
  file:
    - support/gui/build/distributions/*
    - _build/touist-cli*
  on:
    tags: true

# The commiter will be informed that one of his commits
# broke the build. I didn't want us to receive an email
# each time we did a new branch, so I changed to
#     on_success: never
notifications:
  email:
    on_success: never # default: change
    on_failure: always # default: always
